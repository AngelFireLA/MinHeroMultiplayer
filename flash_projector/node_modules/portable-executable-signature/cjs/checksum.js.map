{"version":3,"file":"checksum.js","names":["_util","require","offsetNtHeader","view","getUint32","offsetOptionalHeader","offsetChecksum","checksumGet","data","dataAsDataViewReadonly","checksumSet","value","dataAsDataView","setUint32","checksumCreate","offset","result","limit","update","dword","len","byteLength","lenExtra","lenAlign","i","extra","getUint8","checksumUpdate","preserveNull"],"sources":["../src/checksum.ts"],"sourcesContent":["import {ArrayBuffers, IArrayBufferView} from './types.ts';\nimport {dataAsDataViewReadonly, dataAsDataView} from './util.ts';\n\n/**\n * Get NT header offset.\n *\n * @param view Data view.\n * @returns The offset.\n */\nfunction offsetNtHeader(view: Readonly<DataView>) {\n\treturn view.getUint32(60, true);\n}\n\n/**\n * Get NT header offset.\n *\n * @param view Data view.\n * @returns The offset.\n */\nfunction offsetOptionalHeader(view: Readonly<DataView>) {\n\treturn offsetNtHeader(view) + 24;\n}\n\n/**\n * Get the checksum offset.\n *\n * @param view Data view.\n * @returns The offset.\n */\nfunction offsetChecksum(view: Readonly<DataView>) {\n\treturn offsetOptionalHeader(view) + 64;\n}\n\n/**\n * Checksum getter.\n *\n * @param data PE data.\n * @returns Checksum value.\n */\nexport function checksumGet(data: Readonly<ArrayBuffers | IArrayBufferView>) {\n\tconst view = dataAsDataViewReadonly(data);\n\treturn view.getUint32(offsetChecksum(view), true);\n}\n\n/**\n * Checksum setter.\n *\n * @param data PE data.\n * @param value Checksum value.\n */\nexport function checksumSet(\n\tdata: ArrayBuffers | IArrayBufferView,\n\tvalue: number\n) {\n\tconst view = dataAsDataView(data);\n\tview.setUint32(offsetChecksum(view), value, true);\n}\n\n/**\n * Checksum creater.\n *\n * @param data PE data.\n * @returns Checksum value.\n */\nexport function checksumCreate(\n\tdata: Readonly<ArrayBuffers | IArrayBufferView>\n) {\n\tconst view = dataAsDataViewReadonly(data);\n\tconst offset = offsetChecksum(view);\n\n\tlet result = 0;\n\tconst limit = 0x100000000;\n\n\t/**\n\t * Update checksum.\n\t *\n\t * @param dword Next DWORD.\n\t */\n\tconst update = (dword: number) => {\n\t\tresult += dword;\n\t\tif (result >= limit) {\n\t\t\t// eslint-disable-next-line no-bitwise, unicorn/prefer-math-trunc\n\t\t\tresult = (result % limit) + ((result / limit) | 0);\n\t\t}\n\t};\n\n\tconst len = view.byteLength;\n\tconst lenExtra = len % 4;\n\tconst lenAlign = len - lenExtra;\n\tfor (let i = 0; i < lenAlign; i += 4) {\n\t\tif (i !== offset) {\n\t\t\tupdate(view.getUint32(i, true));\n\t\t}\n\t}\n\tif (lenExtra) {\n\t\tlet extra = 0;\n\t\tfor (let i = 0; i < lenExtra; i++) {\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\textra |= view.getUint8(lenAlign + i) << ((3 - i) * 8);\n\t\t}\n\t\tupdate(extra);\n\t}\n\n\t// eslint-disable-next-line no-bitwise\n\tresult = (result & 0xffff) + (result >>> 16);\n\n\t// eslint-disable-next-line no-bitwise\n\tresult += result >>> 16;\n\n\t// eslint-disable-next-line no-bitwise\n\treturn (result & 0xffff) + len;\n}\n\n/**\n * Checksum updater.\n *\n * @param data PE data.\n * @param preserveNull Preserve a null checksum.\n */\nexport function checksumUpdate(\n\tdata: ArrayBuffers | IArrayBufferView,\n\tpreserveNull: boolean\n) {\n\tconst view = dataAsDataView(data);\n\tconst value = checksumGet(data);\n\tif (value || !preserveNull) {\n\t\tchecksumSet(view, checksumCreate(view));\n\t}\n}\n"],"mappings":"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","ignoreList":[]}