{"version":3,"file":"unsign.js","names":["LC_SEGMENT","LC_SEGMENT_64","LC_DYLD_INFO","LC_DYLD_INFO_ONLY","LC_SYMTAB","LC_DYSYMTAB","LC_FUNCTION_STARTS","LC_DATA_IN_CODE","ENCRYPTION_INFO","ENCRYPTION_INFO_64","LC_CODE_SIGNATURE","address","value","toString","toUpperCase","dataAsDataView","data","size","offset","bufferView","buffer","byteLength","byteOffset","DataView","dataViewAscii","dv","str","i","v","getUint8","String","fromCharCode","Error","dataViewSlice","dataViewCopy","start","slice","dataViewConcat","dvs","total","reduce","a","b","concat","ArrayBuffer","Uint8Array","set","unsignThin","bits","le","rU32","getUint32","rU64","h","l","magic","ncmds","sizeofcmds","csCommandOffset","csCommandSize","csDataOffset","csDataSize","linkedit32Offset","linkedit64Offset","end","far","type","name","addr","csDataEnd","padSize","reduced","unsigned","wU32","setUint32","wU64","setUint8","unsignFat","didUnsign","pieces","archs","off","cpuType","cpuSubtype","align","maybeSigned","maybeUnsigned","unsign","push","headerSize","header","headerOff","bodyOff","reverse","entry","pop","alignTo","unaligned","pad"],"sources":["../src/unsign.ts"],"sourcesContent":["import {ArrayBuffers, IArrayBufferView} from './types.ts';\n\nconst LC_SEGMENT = 0x01;\nconst LC_SEGMENT_64 = 0x19;\nconst LC_DYLD_INFO = 0x22;\nconst LC_DYLD_INFO_ONLY = 0x80000022;\nconst LC_SYMTAB = 0x02;\nconst LC_DYSYMTAB = 0x0b;\nconst LC_FUNCTION_STARTS = 0x26;\nconst LC_DATA_IN_CODE = 0x29;\nconst ENCRYPTION_INFO = 0x21;\nconst ENCRYPTION_INFO_64 = 0x2c;\nconst LC_CODE_SIGNATURE = 0x1d;\n\n/**\n * Encode address for display.\n *\n * @param value Address value.\n * @returns Encoded address.\n */\nfunction address(value: number) {\n\treturn `0x${value.toString(16).toUpperCase()}`;\n}\n\n/**\n * Convert buffer-like object to DataView.\n *\n * @param data Data view.\n * @returns Data view.\n */\nfunction dataAsDataView(data: Readonly<ArrayBuffers | IArrayBufferView>) {\n\tlet size;\n\tlet offset;\n\tconst bufferView = data as IArrayBufferView;\n\tlet {buffer} = bufferView;\n\tif (buffer) {\n\t\tsize = bufferView.byteLength;\n\t\toffset = bufferView.byteOffset;\n\t} else {\n\t\tbuffer = data as ArrayBuffers;\n\t\tsize = buffer.byteLength;\n\t\toffset = 0;\n\t}\n\treturn new DataView(\n\t\tbuffer as ArrayBuffers,\n\t\toffset,\n\t\tsize\n\t) as Readonly<DataView>;\n}\n\n/**\n * Read ASCII string from data view.\n *\n * @param dv Data view.\n * @param offset String offset.\n * @param size String data max size.\n * @returns The string.\n */\nfunction dataViewAscii(dv: Readonly<DataView>, offset: number, size: number) {\n\tlet str = '';\n\tfor (let i = 0; i < size; i++) {\n\t\tconst v = dv.getUint8(offset + i);\n\t\tif (!v) {\n\t\t\treturn str;\n\t\t}\n\t\t// eslint-disable-next-line unicorn/prefer-code-point\n\t\tstr += String.fromCharCode(v);\n\t}\n\tthrow new Error('String did not end within range');\n}\n\n/**\n * Get data view slice, using same underlying buffer.\n *\n * @param dv Data view.\n * @param offset View offset.\n * @param size View size.\n * @returns Data view.\n */\nfunction dataViewSlice(dv: Readonly<DataView>, offset: number, size: number) {\n\treturn new DataView(\n\t\tdv.buffer,\n\t\tdv.byteOffset + offset,\n\t\tsize\n\t) as Readonly<DataView>;\n}\n\n/**\n * Copy data view slice, copying the underlying buffer.\n *\n * @param dv Data view.\n * @param offset Copy offset.\n * @param size Copy size.\n * @returns Data buffer.\n */\nfunction dataViewCopy(dv: Readonly<DataView>, offset: number, size: number) {\n\tconst start = dv.byteOffset + offset;\n\treturn dv.buffer.slice(start, start + size);\n}\n\n/**\n * Concatenate data view list.\n *\n * @param dvs Data views.\n * @param total Total size, optional, otherwise computed from the list.\n * @returns Array buffer.\n */\nfunction dataViewConcat(\n\tdvs: Readonly<DataView>[],\n\ttotal: number | null = null\n) {\n\t// Calculate size if necessary.\n\tconst size =\n\t\ttotal === null ? dvs.reduce((a, b) => a + b.byteLength, 0) : total;\n\n\t// Write all the data to one array buffer.\n\tconst concat = new ArrayBuffer(size);\n\tlet offset = 0;\n\tfor (const {buffer, byteOffset, byteLength} of dvs) {\n\t\tnew Uint8Array(concat, offset, byteLength).set(\n\t\t\tnew Uint8Array(buffer, byteOffset, byteLength),\n\t\t\t0\n\t\t);\n\t\toffset += byteLength;\n\t}\n\treturn concat;\n}\n\n/**\n * Unsign Mach-O, thin format.\n *\n * @param data Mach-O data.\n * @returns Mach-O data unsigned or null if no signature removed.\n */\nfunction unsignThin(data: Readonly<ArrayBuffers | IArrayBufferView>) {\n\tconst dv = dataAsDataView(data);\n\n\tlet bits = 0;\n\tlet le = false;\n\n\t/**\n\t * UINT32 read helper.\n\t *\n\t * @param offset File offset.\n\t * @returns UINT32 integer.\n\t */\n\tconst rU32 = (offset: number) => dv.getUint32(offset, le);\n\n\t/**\n\t * UINT64 read helper.\n\t *\n\t * @param offset File offset.\n\t * @returns UINT64 integer.\n\t */\n\tconst rU64 = (offset: number) => {\n\t\tconst h = rU32(le ? offset + 4 : offset);\n\t\tconst l = rU32(le ? offset : offset + 4);\n\t\tif (h > 0) {\n\t\t\tthrow new Error('Integer is too large');\n\t\t}\n\t\treturn l;\n\t};\n\n\t// Detect header.\n\tconst magic = rU32(0);\n\tswitch (magic) {\n\t\tcase 0xfeedface: {\n\t\t\tbits = 32;\n\t\t\tbreak;\n\t\t}\n\t\tcase 0xcefaedfe: {\n\t\t\tbits = 32;\n\t\t\tle = true;\n\t\t\tbreak;\n\t\t}\n\t\tcase 0xfeedfacf: {\n\t\t\tbits = 64;\n\t\t\tbreak;\n\t\t}\n\t\tcase 0xcffaedfe: {\n\t\t\tbits = 64;\n\t\t\tle = true;\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unexpected header magic: ${address(magic)}`);\n\t\t}\n\t}\n\n\t// Read number and size of commands.\n\tconst ncmds = rU32(16);\n\tconst sizeofcmds = rU32(20);\n\n\t// Code signature value offsets.\n\tlet csCommandOffset = 0;\n\tlet csCommandSize = 0;\n\tlet csDataOffset = 0;\n\tlet csDataSize = 0;\n\n\t// __LINKEDIT offsets.\n\tlet linkedit32Offset = 0;\n\tlet linkedit64Offset = 0;\n\n\t// A variable for where tha Mach-O should end.\n\tlet end = 0;\n\n\t/**\n\t * Update the far offset.\n\t *\n\t * @param offset Current offset.\n\t */\n\tconst far = (offset: number) => {\n\t\tif (offset > end) {\n\t\t\tend = offset;\n\t\t}\n\t};\n\n\t// Loop over load commands.\n\tlet offset = bits === 64 ? 0x20 : 0x1c;\n\tfar(offset + sizeofcmds);\n\tfor (let i = 0; i < ncmds; i++) {\n\t\tconst type = rU32(offset);\n\t\tconst size = rU32(offset + 4);\n\n\t\t// Signature should be the last command.\n\t\tif (csCommandOffset) {\n\t\t\tthrow new Error(\n\t\t\t\t`Unexpected command after signature: ${address(offset)}`\n\t\t\t);\n\t\t}\n\n\t\t// Handle those types that need updating or might define the file end.\n\t\tswitch (type) {\n\t\t\tcase LC_SEGMENT: {\n\t\t\t\tconst name = dataViewAscii(dv, offset + 8, offset + 24);\n\n\t\t\t\t// __LINKEDIT commands includes code signature size.\n\t\t\t\tif (name === '__LINKEDIT') {\n\t\t\t\t\tif (linkedit32Offset) {\n\t\t\t\t\t\tconst addr = address(offset);\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected second LC_SEGMENT ${name}: ${addr}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tlinkedit32Offset = offset + 36;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// File offset and size.\n\t\t\t\tfar(rU32(offset + 32) + rU32(offset + 36));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_SEGMENT_64: {\n\t\t\t\tconst name = dataViewAscii(dv, offset + 8, offset + 24);\n\n\t\t\t\t// __LINKEDIT commands includes code signature size.\n\t\t\t\tif (name === '__LINKEDIT') {\n\t\t\t\t\tif (linkedit64Offset) {\n\t\t\t\t\t\tconst addr = address(offset);\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected second LC_SEGMENT_64 ${name}: ${addr}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tlinkedit64Offset = offset + 48;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// File offset and size.\n\t\t\t\tfar(rU64(offset + 40) + rU64(offset + 48));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_DYLD_INFO:\n\t\t\tcase LC_DYLD_INFO_ONLY: {\n\t\t\t\t// Rebase, Binding, Weak Binding, Laxy Binding, and Export.\n\t\t\t\tfar(rU32(offset + 8) + rU32(offset + 12));\n\t\t\t\tfar(rU32(offset + 16) + rU32(offset + 20));\n\t\t\t\tfar(rU32(offset + 24) + rU32(offset + 28));\n\t\t\t\tfar(rU32(offset + 32) + rU32(offset + 36));\n\t\t\t\tfar(rU32(offset + 40) + rU32(offset + 44));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_SYMTAB: {\n\t\t\t\t// Symbol table offset and symbol count, 12 bytes each.\n\t\t\t\tfar(rU32(offset + 8) + rU32(offset + 12) * 12);\n\t\t\t\t// String table offset and size.\n\t\t\t\tfar(rU32(offset + 16) + rU32(offset + 20));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_DYSYMTAB: {\n\t\t\t\t// Are the other tables ever used? If so how large are entries?\n\t\t\t\t// IndSym offset and entry count, 4 bytes each.\n\t\t\t\tfar(rU32(offset + 56) + rU32(offset + 60) * 4);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_FUNCTION_STARTS:\n\t\t\tcase LC_DATA_IN_CODE:\n\t\t\tcase ENCRYPTION_INFO:\n\t\t\tcase ENCRYPTION_INFO_64: {\n\t\t\t\t// Data offset and size.\n\t\t\t\tfar(rU32(offset + 8) + rU32(offset + 12));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_CODE_SIGNATURE: {\n\t\t\t\t// Remember code signature entry to update.\n\t\t\t\tcsCommandOffset = offset;\n\t\t\t\tcsCommandSize = size;\n\t\t\t\tcsDataOffset = rU32(offset + 8);\n\t\t\t\tcsDataSize = rU32(offset + 12);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// Do nothing.\n\t\t\t}\n\t\t}\n\n\t\toffset += size;\n\t}\n\n\t// No sigature, return null.\n\tif (!csCommandOffset) {\n\t\treturn null;\n\t}\n\n\t// Calculate signature end which should be at end of file.\n\tconst csDataEnd = csDataOffset + csDataSize;\n\tif (data.byteLength !== csDataEnd) {\n\t\tthrow new Error(\n\t\t\t`Unexpected data after code signature: ${address(csDataEnd)}`\n\t\t);\n\t}\n\n\t// Make sure end is before code signature, and with alignment amount.\n\tif (end > csDataOffset) {\n\t\tthrow new Error(\n\t\t\t`Unexpected command data after signature start: ${address(end)}`\n\t\t);\n\t}\n\tconst padSize = csDataOffset - end;\n\tif (csDataOffset - end >= 16) {\n\t\tthrow new Error(\n\t\t\t`Unexpected amount of padding before signature start: ${padSize}`\n\t\t);\n\t}\n\n\t// Calculate the amout removed.\n\tconst reduced = dv.byteLength - end;\n\n\t// Copy data, trimming off code signature and padding before it.\n\tconst unsigned = new DataView(dataViewCopy(dv, 0, end));\n\n\t/**\n\t * UINT32 write helper.\n\t *\n\t * @param value UINT32 integer.\n\t * @param offset File offset.\n\t */\n\tconst wU32 = (value: number, offset: number) => {\n\t\tunsigned.setUint32(offset, value, le);\n\t};\n\n\t/**\n\t * UINT64 write helper.\n\t *\n\t * @param value UINT64 integer.\n\t * @param offset File offset.\n\t */\n\tconst wU64 = (value: number, offset: number) => {\n\t\twU32(le ? value : 0, offset);\n\t\twU32(le ? 0 : value, offset + 4);\n\t};\n\n\t// Reduce __LINKEDIT file size by the amout trimmed.\n\tif (linkedit32Offset) {\n\t\twU32(rU32(linkedit32Offset) - reduced, linkedit32Offset);\n\t}\n\tif (linkedit64Offset) {\n\t\twU64(rU64(linkedit64Offset) - reduced, linkedit64Offset);\n\t}\n\n\t// Null out code signature load command.\n\tfor (let i = 0; i < csCommandSize; i++) {\n\t\tunsigned.setUint8(csCommandOffset + i, 0);\n\t}\n\n\t// Reduce the number of load commands by one, and shrink commands size.\n\twU32(ncmds - 1, 16);\n\twU32(sizeofcmds - csCommandSize, 20);\n\n\t// Return the array buffer.\n\treturn unsigned.buffer;\n}\n\n/**\n * Unsign Mach-O, fat format.\n *\n * @param data Mach-O data.\n * @returns Mach-O data unsigned or null if no signature removed.\n */\nfunction unsignFat(data: Readonly<ArrayBuffers | IArrayBufferView>) {\n\tconst dv = dataAsDataView(data);\n\n\t/**\n\t * UINT32 read helper.\n\t *\n\t * @param offset File offset.\n\t * @returns UINT32 integer.\n\t */\n\tconst rU32 = (offset: number) => dv.getUint32(offset, false);\n\n\t// Binaries to be joined in new fat binary.\n\tlet didUnsign = false;\n\tconst pieces: Readonly<{\n\t\tcpuType: number;\n\t\tcpuSubtype: number;\n\t\talign: number;\n\t\tunsigned: Readonly<DataView>;\n\t}>[] = [];\n\n\t// Read all the fat binary images.\n\tconst magic = rU32(0);\n\tconst archs = rU32(4);\n\tlet off = 8;\n\tfor (let i = 0; i < archs; i++) {\n\t\tconst cpuType = rU32(off);\n\t\tconst cpuSubtype = rU32(off + 4);\n\t\tconst offset = rU32(off + 8);\n\t\tconst size = rU32(off + 12);\n\t\tconst align = rU32(off + 16);\n\n\t\t// Unsign if necessary, remember if any were unsigned.\n\t\tconst maybeSigned = dataViewSlice(dv, offset, size);\n\t\tconst maybeUnsigned = unsign(maybeSigned);\n\t\tif (maybeUnsigned) {\n\t\t\tdidUnsign = true;\n\t\t}\n\t\tconst unsigned = maybeUnsigned\n\t\t\t? dataAsDataView(maybeUnsigned)\n\t\t\t: maybeSigned;\n\n\t\t// Add to the list.\n\t\tpieces.push({\n\t\t\tcpuType,\n\t\t\tcpuSubtype,\n\t\t\talign,\n\t\t\tunsigned\n\t\t});\n\n\t\toff += 20;\n\t}\n\n\t// No signatures, return null.\n\tif (!didUnsign) {\n\t\treturn null;\n\t}\n\n\t// Create a list of all the parts to be concatenated.\n\tconst concat: Readonly<DataView>[] = [];\n\n\t// Create header.\n\tconst headerSize = 8 + archs * 20;\n\tconst header = new DataView(new ArrayBuffer(headerSize));\n\n\t/**\n\t * UINT32 write helper.\n\t *\n\t * @param value UINT32 integer.\n\t * @param offset File offset.\n\t */\n\tconst wU32 = (value: number, offset: number) => {\n\t\theader.setUint32(offset, value, false);\n\t};\n\twU32(magic, 0);\n\twU32(archs, 4);\n\tconcat.push(header);\n\n\t// Add body pieces and update header.\n\tlet headerOff = 8;\n\tlet bodyOff = headerSize;\n\tpieces.reverse();\n\tfor (;;) {\n\t\tconst entry = pieces.pop();\n\t\tif (!entry) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// Validate the align value.\n\t\tconst {unsigned, align} = entry;\n\t\tif (align > 31) {\n\t\t\tthrow new Error(`Invalid alignment value: ${align}`);\n\t\t}\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst alignTo = (1 << align) >>> 0;\n\t\tconst size = unsigned.byteLength;\n\n\t\t// Add padding to align if necessary.\n\t\tconst unaligned = bodyOff % alignTo;\n\t\tif (unaligned) {\n\t\t\tconst pad = alignTo - unaligned;\n\t\t\tconcat.push(new DataView(new ArrayBuffer(pad)));\n\t\t\tbodyOff += pad;\n\t\t}\n\n\t\t// Write header.\n\t\twU32(entry.cpuType, headerOff);\n\t\twU32(entry.cpuSubtype, headerOff + 4);\n\t\twU32(bodyOff, headerOff + 8);\n\t\twU32(size, headerOff + 12);\n\t\twU32(align, headerOff + 16);\n\t\theaderOff += 20;\n\n\t\t// Add body and update the offset.\n\t\tconcat.push(unsigned);\n\t\tbodyOff += size;\n\t}\n\n\treturn dataViewConcat(concat, bodyOff);\n}\n\n/**\n * Unsign Mach-O.\n *\n * @param data Mach-O data.\n * @returns Mach-O data unsigned or null if no signature removed.\n */\nexport function unsign(data: Readonly<ArrayBuffers | IArrayBufferView>) {\n\tif (dataAsDataView(data).getUint32(0, false) === 0xcafebabe) {\n\t\treturn unsignFat(data);\n\t}\n\treturn unsignThin(data);\n}\n"],"mappings":"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","ignoreList":[]}