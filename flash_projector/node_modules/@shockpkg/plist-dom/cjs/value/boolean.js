"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValueBoolean = void 0;
var _options = require("../options.js");
var _util = require("../util.js");
var _value = require("../value.js");
/**
 * ValueBoolean object.
 */
class ValueBoolean extends _value.Value {
  /**
   * Value type.
   */
  static TYPE = 'boolean';

  /**
   * Tag names.
   */
  static TAG_NAMES = ['true', 'false'];

  /**
   * Value value.
   */
  value = false;

  /**
   * ValueBoolean constructor.
   *
   * @param value The value.
   */
  constructor(value = false) {
    super();
    this.value = value;
  }

  /**
   * @inheritdoc
   */
  fromXmlElement(element) {
    (0, _util.assertNoXmlElementChildNodes)(element);
    switch (element.tagName) {
      case 'true':
        {
          this.value = true;
          return;
        }
      case 'false':
        {
          this.value = false;
          return;
        }
      default:
        {
          throw (0, _util.assertXmlTagName)(element, '');
        }
    }
  }

  /**
   * @inheritdoc
   */
  toXml(options = null, depth = 0) {
    const p = (options?.indentString ?? _options.INDENT_STRING).repeat(depth);
    return this.value ? `${p}<true/>` : `${p}<false/>`;
  }
}
exports.ValueBoolean = ValueBoolean;
//# sourceMappingURL=boolean.js.map