"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValueReal = void 0;
var _options = require("../options.js");
var _util = require("../util.js");
var _value = require("../value.js");
/**
 * ValueReal object.
 */
class ValueReal extends _value.Value {
  /**
   * Value type.
   */
  static TYPE = 'real';

  /**
   * Tag names.
   */
  static TAG_NAMES = ['real'];

  /**
   * Value value.
   */
  value = 0;

  /**
   * ValueReal constructor.
   *
   * @param value The value.
   */
  constructor(value = 0) {
    super();
    this.value = value;
  }

  /**
   * @inheritdoc
   */
  fromXmlElement(element) {
    (0, _util.assertXmlTagName)(element, 'real');
    const text = (0, _util.xmlElementText)(element)?.nodeValue || '';
    if (!/^[+-]?(\d+|\d*\.\d+)$/.test(text)) {
      throw new Error(`Invalid real data: ${text}`);
    }
    this.value = +text;
  }

  /**
   * @inheritdoc
   */
  toXml(options = null, depth = 0) {
    const p = (options?.indentString ?? _options.INDENT_STRING).repeat(depth);
    const v = this.value;
    return `${p}<real>${v}</real>`;
  }
}
exports.ValueReal = ValueReal;
//# sourceMappingURL=real.js.map