"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValueDate = void 0;
var _options = require("../options.js");
var _util = require("../util.js");
var _value = require("../value.js");
/**
 * ValueDate object.
 */
class ValueDate extends _value.Value {
  /**
   * Value type.
   */
  static TYPE = 'date';

  /**
   * Tag names.
   */
  static TAG_NAMES = ['date'];

  /**
   * Value value.
   */
  value = new Date();

  /**
   * ValueDate constructor.
   *
   * @param value The value.
   */
  constructor(value = new Date()) {
    super();
    this.value = value;
  }

  /**
   * @inheritdoc
   */
  fromXmlElement(element) {
    (0, _util.assertXmlTagName)(element, 'date');
    const text = (0, _util.xmlElementText)(element)?.nodeValue || '';
    const v = new Date(text);
    const time = v.getTime();
    if (!time && time !== 0) {
      throw new Error(`Invalid date data: ${text}`);
    }
    this.value = v;
  }

  /**
   * @inheritdoc
   */
  toXml(options = null, depth = 0) {
    const p = (options?.indentString ?? _options.INDENT_STRING).repeat(depth);
    const d = this.value.toISOString().replace(/\.\d+/, '');
    return `${p}<date>${d}</date>`;
  }
}
exports.ValueDate = ValueDate;
//# sourceMappingURL=date.js.map