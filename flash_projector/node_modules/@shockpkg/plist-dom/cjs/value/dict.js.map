{"version":3,"file":"dict.js","names":["_options","require","_util","_value","_array","_boolean","_data","_integer","_real","_string","childTagNames","ValueDict","Value","TYPE","TAG_NAMES","CHILD_TAG_NAMES","Map","ValueType","ValueArray","ValueBoolean","ValueData","ValueInteger","ValueReal","ValueString","t","set","value","constructor","size","has","key","get","getValue","r","Error","delete","clear","fromXmlElement","element","assertXmlTagName","children","xmlElementChildElements","l","length","v","i","eK","eV","xmlElementText","nodeValue","childFromXmlElement","tagName","toXml","options","depth","indentString","INDENT_STRING","n","newlineString","NEWLINE_STRING","p","repeat","p2","val","e","replaceAll","exports"],"sources":["../../src/value/dict.ts"],"sourcesContent":["import {INDENT_STRING, NEWLINE_STRING, IToXmlOptions} from '../options.ts';\nimport {\n\tIElement,\n\tassertXmlTagName,\n\txmlElementChildElements,\n\txmlElementText\n} from '../util.ts';\nimport {Value} from '../value.ts';\n\nimport {ValueArray} from './array.ts';\nimport {ValueBoolean} from './boolean.ts';\nimport {ValueData} from './data.ts';\nimport {ValueInteger} from './integer.ts';\nimport {ValueReal} from './real.ts';\nimport {ValueString} from './string.ts';\n\nlet childTagNames: Readonly<Map<string, new () => Value>>;\n\n/**\n * ValueDict object.\n */\nexport class ValueDict extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'dict';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['dict'];\n\n\t/**\n\t * Child tag names.\n\t *\n\t * @returns Child tag names map.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tpublic static get CHILD_TAG_NAMES() {\n\t\tif (!childTagNames) {\n\t\t\tchildTagNames = new Map();\n\t\t\tfor (const ValueType of [\n\t\t\t\tValueArray,\n\t\t\t\tValueBoolean,\n\t\t\t\tValueData,\n\t\t\t\tValueDict,\n\t\t\t\tValueInteger,\n\t\t\t\tValueReal,\n\t\t\t\tValueString\n\t\t\t]) {\n\t\t\t\tfor (const t of ValueType.TAG_NAMES) {\n\t\t\t\t\tchildTagNames.set(t, ValueType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn childTagNames;\n\t}\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value = new Map<string, Value>();\n\n\t/**\n\t * ValueDict constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value = new Map<string, Value>()) {\n\t\tsuper();\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Dictionary size.\n\t *\n\t * @returns The size.\n\t */\n\tpublic get size() {\n\t\treturn this.value.size;\n\t}\n\n\t/**\n\t * Check if key exists.\n\t *\n\t * @param key Dictionary key.\n\t * @returns The value or null.\n\t */\n\tpublic has(key: string) {\n\t\treturn this.value.has(key);\n\t}\n\n\t/**\n\t * Get value for key or null if does not exist.\n\t *\n\t * @param key Dictionary key.\n\t * @returns The value or null.\n\t */\n\tpublic get(key: string) {\n\t\treturn this.value.get(key) || null;\n\t}\n\n\t/**\n\t * Get value for key or throw.\n\t *\n\t * @param key Dictionary key.\n\t * @returns The value.\n\t */\n\tpublic getValue(key: string) {\n\t\tconst r = this.get(key);\n\t\tif (!r) {\n\t\t\tthrow new Error(`Key is null: ${key}`);\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t * Set value for key.\n\t *\n\t * @param key Dictionary key.\n\t * @param value Value object.\n\t */\n\tpublic set(key: string, value: Value) {\n\t\tthis.value.set(key, value);\n\t}\n\n\t/**\n\t * Delete value for key.\n\t *\n\t * @param key Dictionary key.\n\t */\n\tpublic delete(key: string) {\n\t\tthis.value.delete(key);\n\t}\n\n\t/**\n\t * Clear dictionary.\n\t */\n\tpublic clear() {\n\t\tthis.value.clear();\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertXmlTagName(element, 'dict');\n\t\tconst children = xmlElementChildElements(element);\n\t\tconst l = children.length;\n\t\tif (l % 2) {\n\t\t\tthrow new Error(`Uneven number of child elements: ${l}`);\n\t\t}\n\t\tconst v: Map<string, Value> = new Map();\n\t\tfor (let i = 0; i < l; i += 2) {\n\t\t\tconst eK = children[i];\n\t\t\tconst eV = children[i + 1];\n\t\t\tassertXmlTagName(eK, 'key');\n\t\t\tconst key = xmlElementText(eK)?.nodeValue || '';\n\t\t\tconst value = this.childFromXmlElement(eV);\n\t\t\tv.set(key, value);\n\t\t}\n\t\tthis.value = v;\n\t}\n\n\t/**\n\t * Decode child element from XML element.\n\t *\n\t * @param element XML element.\n\t * @returns Value element.\n\t */\n\tpublic childFromXmlElement(element: Readonly<IElement>) {\n\t\tconst {tagName} = element;\n\t\tconst {CHILD_TAG_NAMES} = this.constructor as typeof ValueDict;\n\t\tconst Value = CHILD_TAG_NAMES.get(tagName) || null;\n\t\tif (!Value) {\n\t\t\tthrow new Error(`Unknown element type: ${tagName}`);\n\t\t}\n\t\tconst r = new Value();\n\t\tr.fromXmlElement(element);\n\t\treturn r;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst i = options?.indentString ?? INDENT_STRING;\n\t\tconst n = options?.newlineString ?? NEWLINE_STRING;\n\t\tconst p = i.repeat(depth);\n\t\tconst v = this.value;\n\t\tif (!v.size) {\n\t\t\treturn `${p}<dict/>`;\n\t\t}\n\t\tconst p2 = i.repeat(depth + 1);\n\t\tlet r = `${p}<dict>`;\n\t\tfor (const [key, val] of v) {\n\t\t\tconst e = key\n\t\t\t\t.replaceAll('&', '&amp;')\n\t\t\t\t.replaceAll('<', '&lt;')\n\t\t\t\t.replaceAll('>', '&gt;');\n\t\t\tr += `${n}${p2}<key>${e}</key>${n}${val.toXml(options, depth + 1)}`;\n\t\t}\n\t\tr += `${n}${p}</dict>`;\n\t\treturn r;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}