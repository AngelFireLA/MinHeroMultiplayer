{"version":3,"file":"integer.js","names":["_options","require","_util","_value","MAX_NUM","assertInteger","value","Number","isInteger","Error","ValueInteger","Value","TYPE","TAG_NAMES","constructor","asBigInt","BigInt","asNumber","fromXmlElement","element","assertXmlTagName","text","xmlElementText","nodeValue","test","num","toXml","options","depth","p","indentString","INDENT_STRING","repeat","v","exports"],"sources":["../../src/value/integer.ts"],"sourcesContent":["import {INDENT_STRING, IToXmlOptions} from '../options.ts';\nimport {IElement, assertXmlTagName, xmlElementText} from '../util.ts';\nimport {Value} from '../value.ts';\n\nconst MAX_NUM = 0x1fffffffffffff;\n\n/**\n * Assert number is integer.\n *\n * @param value Number value.\n */\nfunction assertInteger(value: number | bigint) {\n\tif (typeof value === 'number' && !Number.isInteger(value)) {\n\t\t// eslint-disable-next-line unicorn/prefer-type-error\n\t\tthrow new Error(`Value not an integer: ${value}`);\n\t}\n}\n\n/**\n * ValueInteger object.\n */\nexport class ValueInteger extends Value {\n\t/**\n\t * Value type.\n\t */\n\tpublic static readonly TYPE = 'integer';\n\n\t/**\n\t * Tag names.\n\t */\n\tpublic static readonly TAG_NAMES = ['integer'];\n\n\t/**\n\t * Value value.\n\t */\n\tpublic value: number | bigint = 0;\n\n\t/**\n\t * ValueInteger constructor.\n\t *\n\t * @param value The value.\n\t */\n\tconstructor(value: number | bigint = 0) {\n\t\tsuper();\n\n\t\tassertInteger(value);\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Get value as BigInt.\n\t *\n\t * @returns Value as a BigInt.\n\t */\n\tpublic asBigInt() {\n\t\treturn BigInt(this.value);\n\t}\n\n\t/**\n\t * Get value as Number, possibly losing some precision.\n\t *\n\t * @returns Value as a Number.\n\t */\n\tpublic asNumber() {\n\t\treturn Number(this.value);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic fromXmlElement(element: Readonly<IElement>) {\n\t\tassertXmlTagName(element, 'integer');\n\t\tconst text = xmlElementText(element)?.nodeValue || '';\n\t\tif (!/^[+-]?\\d+$/.test(text)) {\n\t\t\tthrow new Error(`Invalid integer data: ${text}`);\n\t\t}\n\t\tconst num = +text;\n\t\tthis.value = num > MAX_NUM || num < -MAX_NUM ? BigInt(text) : num;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic toXml(options: Readonly<IToXmlOptions> | null = null, depth = 0) {\n\t\tconst p = (options?.indentString ?? INDENT_STRING).repeat(depth);\n\t\tconst v = this.value;\n\t\tassertInteger(v);\n\t\treturn `${p}<integer>${v}</integer>`;\n\t}\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAEA,MAAMG,OAAO,GAAG,gBAAgB;;AAEhC;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,KAAsB,EAAE;EAC9C,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC,EAAE;IAC1D;IACA,MAAM,IAAIG,KAAK,CAAC,yBAAyBH,KAAK,EAAE,CAAC;EAClD;AACD;;AAEA;AACA;AACA;AACO,MAAMI,YAAY,SAASC,YAAK,CAAC;EACvC;AACD;AACA;EACC,OAAuBC,IAAI,GAAG,SAAS;;EAEvC;AACD;AACA;EACC,OAAuBC,SAAS,GAAG,CAAC,SAAS,CAAC;;EAE9C;AACD;AACA;EACQP,KAAK,GAAoB,CAAC;;EAEjC;AACD;AACA;AACA;AACA;EACCQ,WAAWA,CAACR,KAAsB,GAAG,CAAC,EAAE;IACvC,KAAK,CAAC,CAAC;IAEPD,aAAa,CAACC,KAAK,CAAC;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACnB;;EAEA;AACD;AACA;AACA;AACA;EACQS,QAAQA,CAAA,EAAG;IACjB,OAAOC,MAAM,CAAC,IAAI,CAACV,KAAK,CAAC;EAC1B;;EAEA;AACD;AACA;AACA;AACA;EACQW,QAAQA,CAAA,EAAG;IACjB,OAAOV,MAAM,CAAC,IAAI,CAACD,KAAK,CAAC;EAC1B;;EAEA;AACD;AACA;EACQY,cAAcA,CAACC,OAA2B,EAAE;IAClD,IAAAC,sBAAgB,EAACD,OAAO,EAAE,SAAS,CAAC;IACpC,MAAME,IAAI,GAAG,IAAAC,oBAAc,EAACH,OAAO,CAAC,EAAEI,SAAS,IAAI,EAAE;IACrD,IAAI,CAAC,YAAY,CAACC,IAAI,CAACH,IAAI,CAAC,EAAE;MAC7B,MAAM,IAAIZ,KAAK,CAAC,yBAAyBY,IAAI,EAAE,CAAC;IACjD;IACA,MAAMI,GAAG,GAAG,CAACJ,IAAI;IACjB,IAAI,CAACf,KAAK,GAAGmB,GAAG,GAAGrB,OAAO,IAAIqB,GAAG,GAAG,CAACrB,OAAO,GAAGY,MAAM,CAACK,IAAI,CAAC,GAAGI,GAAG;EAClE;;EAEA;AACD;AACA;EACQC,KAAKA,CAACC,OAAuC,GAAG,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAE;IACvE,MAAMC,CAAC,GAAG,CAACF,OAAO,EAAEG,YAAY,IAAIC,sBAAa,EAAEC,MAAM,CAACJ,KAAK,CAAC;IAChE,MAAMK,CAAC,GAAG,IAAI,CAAC3B,KAAK;IACpBD,aAAa,CAAC4B,CAAC,CAAC;IAChB,OAAO,GAAGJ,CAAC,YAAYI,CAAC,YAAY;EACrC;AACD;AAACC,OAAA,CAAAxB,YAAA,GAAAA,YAAA","ignoreList":[]}