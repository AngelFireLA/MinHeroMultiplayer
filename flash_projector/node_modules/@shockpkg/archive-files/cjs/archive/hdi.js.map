{"version":3,"file":"hdi.js","names":["_nodeFs","require","_nodePath","_hdiMac","_archive","_types","_util","walkOpts","ignoreUnreadableDirectories","ejectOptions","force","EntryHdi","Entry","sizeComp","uname","gname","constructor","info","archive","size","mode","uid","gid","atime","mtime","rsrcPathRaw","pathResourceFork","pathRaw","rsrcPath","pathNormalize","path","exports","ArchiveHdi","Archive","FILE_EXTENSIONS","HAS_NAMED_VOLUMES","mounterMac","Mounter","nobrowse","read","itter","_read","each","pathFull","stat","type","statToPathType","readData","PathType","FILE","createReadStream","readSymlink","SYMLINK","fsReadlinkRaw","entry","ret","trigger","rsrcPathFull","rsrcStat","fsLstatExists","sizeRsrc","readRsrc","entryRsrc","RESOURCE_FORK","attach","readonly","device","devices","mountPoint","volumeName","basename","fsWalk","pathRel","pathJoin","eject"],"sources":["../../src/archive/hdi.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport {Stats, createReadStream} from 'node:fs';\nimport {basename, join as pathJoin} from 'node:path';\n\nimport {Mounter} from '@shockpkg/hdi-mac';\n\nimport {Archive, Entry, IEntryInfo} from '../archive.ts';\nimport {PathType} from '../types.ts';\nimport {\n\tfsLstatExists,\n\tfsReadlinkRaw,\n\tfsWalk,\n\tpathNormalize,\n\tpathResourceFork,\n\tstatToPathType\n} from '../util.ts';\n\nconst walkOpts = {\n\tignoreUnreadableDirectories: true\n};\n\nconst ejectOptions = {\n\tforce: true\n};\n\nexport interface IEntryInfoHdi extends IEntryInfo {\n\t/**\n\t * @inheritdoc\n\t */\n\tarchive: ArchiveHdi;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tsize: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tsizeComp?: null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tmode: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tuid: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgid: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tuname?: null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgname?: null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tatime: Date;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tmtime: Date;\n}\n\n/**\n * EntryHdi object.\n */\nexport class EntryHdi extends Entry {\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly archive: ArchiveHdi;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly size: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly sizeComp: null = null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly mode: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly uid: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly gid: number;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly uname: null = null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly gname: null = null;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly atime: Date;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly mtime: Date;\n\n\t/**\n\t * EntryHdi constructor.\n\t *\n\t * @param info Info object.\n\t */\n\tconstructor(info: Readonly<IEntryInfoHdi>) {\n\t\tsuper(info);\n\n\t\tthis.archive = info.archive;\n\t\tthis.size = info.size;\n\t\tthis.mode = info.mode;\n\t\tthis.uid = info.uid;\n\t\tthis.gid = info.gid;\n\t\tthis.atime = info.atime;\n\t\tthis.mtime = info.mtime;\n\t}\n\n\t/**\n\t * Get the path of resource psuedo-file, raw.\n\t *\n\t * @returns Path string.\n\t */\n\tpublic get rsrcPathRaw() {\n\t\treturn pathResourceFork(this.pathRaw);\n\t}\n\n\t/**\n\t * Get the path of resource psuedo-file, normalized.\n\t *\n\t * @returns Path string.\n\t */\n\tpublic get rsrcPath() {\n\t\treturn pathNormalize(pathResourceFork(this.path));\n\t}\n}\n\n/**\n * ArchiveHdi object.\n */\nexport class ArchiveHdi extends Archive {\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic static readonly FILE_EXTENSIONS: readonly string[] | null = [\n\t\t'.dmg',\n\t\t'.iso',\n\t\t'.cdr'\n\t];\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic static readonly HAS_NAMED_VOLUMES: boolean = true;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly Entry = EntryHdi;\n\n\t/**\n\t * Mounter, Mac.\n\t */\n\tpublic mounterMac = new Mounter();\n\n\t/**\n\t * Hide mounted disk image from the file explorers.\n\t */\n\tpublic nobrowse = false;\n\n\t/**\n\t * ArchiveHdi constructor.\n\t *\n\t * @param path File path.\n\t */\n\tconstructor(path: string) {\n\t\tsuper(path);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic async read(itter: (entry: EntryHdi) => Promise<unknown>) {\n\t\tawait super.read(itter as Parameters<Archive['read']>[0]);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tprotected async _read(itter: (entry: EntryHdi) => Promise<unknown>) {\n\t\tconst {mounterMac, nobrowse} = this;\n\n\t\t/**\n\t\t * Each itterator.\n\t\t *\n\t\t * @param pathFull Full path.\n\t\t * @param pathRaw Raw path.\n\t\t * @param stat Stat object.\n\t\t * @returns Recursion hint.\n\t\t */\n\t\tconst each = async (pathFull: string, pathRaw: string, stat: Stats) => {\n\t\t\tconst type = statToPathType(stat);\n\t\t\tif (type === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst {size, mode, uid, gid, atime, mtime} = stat;\n\n\t\t\tconst readData =\n\t\t\t\ttype === PathType.FILE\n\t\t\t\t\t? async () => createReadStream(pathFull)\n\t\t\t\t\t: null;\n\n\t\t\tconst readSymlink =\n\t\t\t\ttype === PathType.SYMLINK\n\t\t\t\t\t? async () => fsReadlinkRaw(pathFull)\n\t\t\t\t\t: null;\n\n\t\t\tconst entry = new this.Entry({\n\t\t\t\tarchive: this,\n\t\t\t\ttype,\n\t\t\t\tpathRaw,\n\t\t\t\tsize,\n\t\t\t\tmode,\n\t\t\t\tuid,\n\t\t\t\tgid,\n\t\t\t\tatime,\n\t\t\t\tmtime,\n\t\t\t\treadData,\n\t\t\t\treadSymlink\n\t\t\t});\n\n\t\t\tconst ret = await entry.trigger(itter);\n\t\t\tif (ret === false) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (ret === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (type === PathType.FILE) {\n\t\t\t\tconst rsrcPathFull = pathResourceFork(pathFull);\n\t\t\t\tconst rsrcStat = await fsLstatExists(rsrcPathFull);\n\n\t\t\t\tif (rsrcStat) {\n\t\t\t\t\tconst sizeRsrc = rsrcStat.size;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Read RSRC.\n\t\t\t\t\t *\n\t\t\t\t\t * @returns Read stream.\n\t\t\t\t\t */\n\t\t\t\t\tconst readRsrc = async () => createReadStream(rsrcPathFull);\n\n\t\t\t\t\tconst entryRsrc = new this.Entry({\n\t\t\t\t\t\tarchive: this,\n\t\t\t\t\t\ttype: PathType.RESOURCE_FORK,\n\t\t\t\t\t\tpathRaw,\n\t\t\t\t\t\tsize: sizeRsrc,\n\t\t\t\t\t\tmode,\n\t\t\t\t\t\tuid,\n\t\t\t\t\t\tgid,\n\t\t\t\t\t\tatime,\n\t\t\t\t\t\tmtime,\n\t\t\t\t\t\treadRsrc\n\t\t\t\t\t});\n\n\t\t\t\t\tconst ret = await entryRsrc.trigger(itter);\n\t\t\t\t\tif (ret === false) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (ret === null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Using auto-eject on normal exit option.\n\t\tconst info = await mounterMac.attach(\n\t\t\tthis.path,\n\t\t\t{\n\t\t\t\tnobrowse,\n\t\t\t\treadonly: true\n\t\t\t},\n\t\t\tejectOptions\n\t\t);\n\n\t\t// Eject device when done.\n\t\ttry {\n\t\t\tfor (const device of info.devices) {\n\t\t\t\tconst {mountPoint} = device;\n\t\t\t\tif (!mountPoint) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst volumeName = basename(mountPoint);\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait fsWalk(\n\t\t\t\t\tmountPoint,\n\t\t\t\t\tasync (pathRel, stat) => {\n\t\t\t\t\t\tconst pathFull = pathJoin(mountPoint, pathRel);\n\t\t\t\t\t\tconst pathRaw = pathJoin(volumeName, pathRel);\n\t\t\t\t\t\treturn each(pathFull, pathRaw, stat);\n\t\t\t\t\t},\n\t\t\t\t\twalkOpts\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tawait info.eject(ejectOptions);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}