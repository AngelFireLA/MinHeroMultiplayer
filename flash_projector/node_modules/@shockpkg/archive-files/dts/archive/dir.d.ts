import { Archive, Entry, IEntryInfo } from '../archive.ts';
export interface IEntryInfoDir extends IEntryInfo {
    /**
     * @inheritdoc
     */
    archive: ArchiveDir;
    /**
     * @inheritdoc
     */
    size: number;
    /**
     * @inheritdoc
     */
    sizeComp?: null;
    /**
     * @inheritdoc
     */
    mode: number;
    /**
     * @inheritdoc
     */
    uid: number;
    /**
     * @inheritdoc
     */
    gid: number;
    /**
     * @inheritdoc
     */
    uname?: null;
    /**
     * @inheritdoc
     */
    gname?: null;
    /**
     * @inheritdoc
     */
    atime: Date;
    /**
     * @inheritdoc
     */
    mtime: Date;
}
/**
 * EntryDir object.
 */
export declare class EntryDir extends Entry {
    /**
     * @inheritdoc
     */
    readonly archive: ArchiveDir;
    /**
     * @inheritdoc
     */
    readonly size: number;
    /**
     * @inheritdoc
     */
    readonly sizeComp: null;
    /**
     * @inheritdoc
     */
    readonly mode: number;
    /**
     * @inheritdoc
     */
    readonly uid: number;
    /**
     * @inheritdoc
     */
    readonly gid: number;
    /**
     * @inheritdoc
     */
    readonly uname: null;
    /**
     * @inheritdoc
     */
    readonly gname: null;
    /**
     * @inheritdoc
     */
    readonly atime: Date;
    /**
     * @inheritdoc
     */
    readonly mtime: Date;
    /**
     * EntryDir constructor.
     *
     * @param info Info object.
     */
    constructor(info: Readonly<IEntryInfoDir>);
    /**
     * Get the path of resource psuedo-file, raw.
     *
     * @returns Path string.
     */
    get rsrcPathRaw(): string;
    /**
     * Get the path of resource psuedo-file, normalized.
     *
     * @returns Path string.
     */
    get rsrcPath(): string;
}
/**
 * ArchiveDir object.
 */
export declare class ArchiveDir extends Archive {
    /**
     * @inheritdoc
     */
    static readonly FILE_EXTENSIONS: readonly string[] | null;
    /**
     * @inheritdoc
     */
    readonly Entry: typeof EntryDir;
    /**
     * Limit the directory reading to subpaths.
     */
    subpaths: Readonly<string>[] | null;
    /**
     * ArchiveDir constructor.
     *
     * @param path File path.
     */
    constructor(path: string);
    /**
     * @inheritdoc
     */
    read(itter: (entry: EntryDir) => Promise<unknown>): Promise<void>;
    /**
     * @inheritdoc
     */
    protected _read(itter: (entry: EntryDir) => Promise<unknown>): Promise<void>;
}
