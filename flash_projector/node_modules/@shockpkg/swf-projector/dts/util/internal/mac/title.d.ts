/**
 * MacProjectTitlePatch object.
 */
export declare abstract class MacProjectTitlePatch {
    static readonly CPU_TYPE: number;
    protected _data: Uint8Array;
    protected _view: DataView;
    protected _vmaddr: number;
    protected _title: number;
    /**
     * MacProjectTitlePatch constructor.
     *
     * @param data Code data.
     * @param vmaddr Code address.
     * @param title Title address.
     */
    constructor(data: Uint8Array, vmaddr: number, title: number);
    /**
     * Check patch.
     *
     * @returns True if valid patch, else false.
     */
    abstract check(): boolean;
    /**
     * Apply patch.
     */
    abstract patch(): void;
}
/**
 * MacProjectTitlePatchI386 object.
 */
export declare abstract class MacProjectTitlePatchI386 extends MacProjectTitlePatch {
    static readonly CPU_TYPE = 7;
}
/**
 * MacProjectTitlePatchX8664 object.
 */
export declare abstract class MacProjectTitlePatchX8664 extends MacProjectTitlePatch {
    static readonly CPU_TYPE = 16777223;
}
/**
 * MacProjectTitlePatchARM64 object.
 */
export declare abstract class MacProjectTitlePatchARM64 extends MacProjectTitlePatch {
    static readonly CPU_TYPE = 16777228;
}
export declare const macProjectTitlePatches: {
    CPU_TYPE: number;
    new (data: Uint8Array, vmaddr: number, title: number): MacProjectTitlePatch;
}[];
/**
 * Get the projector patches mapped to CPU type.
 *
 * @param cpuType CPU type to get.
 * @returns Map of type to patcher list.
 */
export declare function macProjectorTitlePatchesByCpuType(cpuType: number): {
    new (data: Uint8Array, vmaddr: number, title: number): MacProjectTitlePatch;
    CPU_TYPE: number;
}[];
