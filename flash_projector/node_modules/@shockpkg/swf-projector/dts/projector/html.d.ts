import { Projector } from '../projector.ts';
/**
 * ProjectorHtml object.
 */
export declare class ProjectorHtml extends Projector {
    /**
     * The HTML document lang.
     */
    lang: string | null;
    /**
     * The HTML document title.
     */
    title: string | null;
    /**
     * HTML document background style.
     */
    background: string | null;
    /**
     * HTML document color style.
     */
    color: string | null;
    /**
     * Required <object> classid attribute.
     */
    classid: string;
    /**
     * Required <embed> type attribute.
     */
    type: string;
    /**
     * The <object> codebase attribute.
     */
    codebase: string | null;
    /**
     * The <embed> codebase attribute.
     */
    pluginspage: string | null;
    /**
     * Required src/movie URL (unless using custom HTML).
     */
    src: string;
    /**
     * Required movie width (unless using custom HTML).
     */
    width: string | number | null;
    /**
     * Required movie height (unless using custom HTML).
     */
    height: string | number | null;
    /**
     * The name for object, param, and embed elements.
     */
    name: string | null;
    /**
     * The id for the object element.
     */
    id: string | null;
    /**
     * The movie background color.
     */
    bgcolor: string | null;
    /**
     * The play attribute.
     */
    play: string | boolean | null;
    /**
     * The loop attribute.
     */
    loop: string | boolean | null;
    /**
     * The menu attribute.
     */
    menu: string | boolean | null;
    /**
     * The quality attribute (low | autolow | autohigh | medium | high | best).
     */
    quality: string | null;
    /**
     * The scale attribute (default | noborder | exactfit | noscale).
     */
    scale: string | null;
    /**
     * The align attribute (l | r | t).
     */
    align: string | null;
    /**
     * The salign attribute (l | t | r | tl | tr).
     */
    salign: string | null;
    /**
     * The wmode attribute (window | direct | opaque | transparent | gpu).
     */
    wmode: string | null;
    /**
     * The base attribute (URL or path).
     */
    base: string | null;
    /**
     * The allowFullScreen attribute (true | false).
     */
    allowFullScreen: string | boolean | null;
    /**
     * The allowFullScreenInteractive attribute (true | false), for AIR.
     */
    allowFullScreenInteractive: string | boolean | null;
    /**
     * The allowScriptAccess attribute (always | sameDomain | never).
     */
    allowScriptAccess: string | null;
    /**
     * The allowNetworking attribute (all | internal | none), for AIR.
     */
    allowNetworking: string | null;
    /**
     * The fullScreenAspectRatio attribute (portrait | landscape).
     */
    fullScreenAspectRatio: string | null;
    /**
     * The flashvars attribute (variable key=value pairs).
     */
    flashvars: string | null;
    /**
     * The browserzoom attribute (scale | noscale).
     */
    browserzoom: string | null;
    /**
     * The devicefont attribute (try to render static text as device text).
     */
    devicefont: string | boolean | null;
    /**
     * The swliveconnect attribute (liveconnect?).
     */
    swliveconnect: string | boolean | null;
    /**
     * The expressinstall attribute (for express install?).
     */
    expressinstall: string | null;
    /**
     * The swfversion attribute (for update checking?).
     */
    swfversion: string | number | null;
    /**
     * Custom HTML to use instead of generated HTML.
     */
    html: string | ((self: this) => string) | ((self: this) => Promise<string>) | null;
    /**
     * ProjectorHtml constructor.
     *
     * @param path Output path.
     */
    constructor(path: string);
    /**
     * @inheritdoc
     */
    write(): Promise<void>;
    /**
     * Get HTML document code.
     *
     * @returns HTML code.
     */
    getHtml(): Promise<string>;
    /**
     * Get the default HTML document code.
     *
     * @returns HTML code.
     */
    getHtmlDefault(): string;
}
