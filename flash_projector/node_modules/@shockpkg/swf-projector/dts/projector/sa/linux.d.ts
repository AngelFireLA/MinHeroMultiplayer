import { IFilePatch, ProjectorSa } from '../sa.ts';
/**
 * ProjectorSaLinux object.
 */
export declare class ProjectorSaLinux extends ProjectorSa {
    /**
     * Attempt to patch the window title with a custom title.
     * Set to a string to automatically patch the binary if possible.
     */
    patchWindowTitle: string | null;
    /**
     * Attempt to patch out application menu.
     * Set to true to automatically patch the code if possible.
     */
    patchMenuRemove: boolean;
    /**
     * Attempt to patch the projector path reading code.
     * Necessary to work around broken projector path resolving code.
     * Set to true to automatically patch the code if possible.
     */
    patchProjectorPath: boolean;
    /**
     * Attempt to patch the broken 64-bit projector offset reading code.
     * Necessary to work around broken projector logic in standalone players.
     * Set to true to automatically patch the code if possible.
     */
    patchProjectorOffset: boolean;
    /**
     * ProjectorSaLinux constructor.
     *
     * @param path Output path.
     */
    constructor(path: string);
    /**
     * @inheritdoc
     */
    get extension(): string;
    /**
     * Get projector archive names, case insensitive.
     *
     * @returns List of names known to be used in projectors.
     */
    getProjectorArchiveNames(): string[];
    /**
     * @inheritdoc
     */
    protected _writePlayer(player: string): Promise<void>;
    /**
     * Get patches to apply.
     *
     * @returns Patches list.
     */
    protected _getPatches(): Promise<IFilePatch[]>;
    /**
     * Get patch for binary.
     *
     * @returns Patch spec.
     */
    protected _getPatchBinary(): Promise<IFilePatch | null>;
    /**
     * Get patch for movie.
     *
     * @returns Patch spec.
     */
    protected _getPatchMovie(): Promise<IFilePatch | null>;
}
