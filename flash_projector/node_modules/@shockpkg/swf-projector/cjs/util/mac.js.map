{"version":3,"file":"mac.js","names":["_promises","require","_machoUnsign","_util","_data","_patch","_constants","_title","alignVmsize","size","align","Math","max","machoTypesData","data","le","dv","DataView","buffer","byteOffset","byteLength","type","offset","cpuType","getUint32","cpuSubtype","magic","FAT_MAGIC","r","count","i","push","MH_MAGIC","MH_MAGIC_64","MH_CIGAM","MH_CIGAM_64","Error","hex4","machoTypesFile","path","f","open","m","h","Uint8Array","bytesRead","read","subarray","v","n","d","set","close","machoFat","machos","alignSize","headD","headV","setUint32","pieces","total","length","add","pad","over","thins","body","Array","isArray","piece","machoThins","start","end","macProjectorMachoPatchEach","title","dataV","lp","SEGMENT","LC_SEGMENT_64","LC_SEGMENT","headerSize","header","headerV","numLoadCommands","sizeOfLoadCommands","commands","lcd","c","commandSize","linkeditI","command","commandV","getCstrN","SEG_LINKEDIT","linkedit","linkeditV","vmaddr","getBigUint64","getInt32","fileoff","filesize","aligned","segname","secname","toLowerCase","te","TextEncoder","secdata","ArrayBuffer","secview","setUint16","charCodeAt","seg","segV","sec","secV","encode","setBigUint64","BigInt","Number","segSize","VM_PROT_READ","slide","slider","LC_DYLD_INFO","LC_DYLD_INFO_ONLY","u32","LC_SYMTAB","LC_DYSYMTAB","LC_CODE_SIGNATURE","LC_SEGMENT_SPLIT_INFO","LC_FUNCTION_STARTS","LC_DATA_IN_CODE","LC_DYLIB_CODE_SIGN_DRS","LC_LINKER_OPTIMIZATION_HINT","LC_DYLD_EXPORTS_TRIE","LC_DYLD_CHAINED_FIXUPS","splice","macho","concat","reduce","textSegment","SEG_TEXT","textSegmentV","textSectionCount","textSection","o","SECT_TEXT","textSectionV","textSectionAddress","textSectionSize","textSectionOffset","textSectionData","found","patchers","macProjectorTitlePatchesByCpuType","Patcher","patcher","check","patch","macProjectorMachoPatch","options","removeCodeSignature","patchWindowTitle","unsigned","unsign","map","thin","machoAppLauncherThin","CPU_TYPE_POWERPC","launcher","CPU_TYPE_POWERPC64","CPU_TYPE_I386","CPU_TYPE_X86_64","CPU_TYPE_ARM64","machoAppLauncherFat","types","Promise","all","machoAppLauncher"],"sources":["../../src/util/mac.ts"],"sourcesContent":["import {open} from 'node:fs/promises';\n\nimport {unsign} from 'macho-unsign';\n\nimport {launcher} from '../util.ts';\n\nimport {hex4, align, concat, getCstrN} from './internal/data.ts';\nimport {slider} from './internal/patch.ts';\nimport {\n\tVM_PROT_READ,\n\tFAT_MAGIC,\n\tMH_MAGIC,\n\tMH_CIGAM,\n\tMH_MAGIC_64,\n\tMH_CIGAM_64,\n\tLC_SEGMENT,\n\tLC_SYMTAB,\n\tLC_DYSYMTAB,\n\tLC_SEGMENT_64,\n\tLC_CODE_SIGNATURE,\n\tLC_SEGMENT_SPLIT_INFO,\n\tLC_DYLD_INFO,\n\tLC_DYLD_INFO_ONLY,\n\tLC_FUNCTION_STARTS,\n\tLC_DATA_IN_CODE,\n\tLC_DYLIB_CODE_SIGN_DRS,\n\tLC_LINKER_OPTIMIZATION_HINT,\n\tLC_DYLD_EXPORTS_TRIE,\n\tLC_DYLD_CHAINED_FIXUPS,\n\tSEG_TEXT,\n\tSECT_TEXT,\n\tSEG_LINKEDIT,\n\tCPU_TYPE_POWERPC,\n\tCPU_TYPE_POWERPC64,\n\tCPU_TYPE_I386,\n\tCPU_TYPE_X86_64,\n\tCPU_TYPE_ARM64\n} from './internal/mac/constants.ts';\nimport {\n\tMacProjectTitlePatch,\n\tmacProjectorTitlePatchesByCpuType\n} from './internal/mac/title.ts';\n\n/**\n * Mach-O Type.\n */\nexport interface IMachoType {\n\t/**\n\t * CPU type.\n\t */\n\tcpuType: number;\n\n\t/**\n\t * CPU subtype.\n\t */\n\tcpuSubtype: number;\n}\n\n/**\n * Align size for vmsize.\n *\n * @param size Raw size.\n * @returns Aligned vmsize.\n */\nfunction alignVmsize(size: number) {\n\treturn align(Math.max(size, 0x4000), 0x1000);\n}\n\n/**\n * Get types of Mach-O data, array if FAT binary, else a single object.\n *\n * @param data Mach-O data.\n * @returns Mach-O types.\n */\nexport function machoTypesData(data: Readonly<Uint8Array>) {\n\tlet le = false;\n\tconst dv = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n\t/**\n\t * Read type at offset.\n\t *\n\t * @param offset File offset.\n\t * @returns Type object.\n\t */\n\tconst type = (offset: number): IMachoType => ({\n\t\tcpuType: dv.getUint32(offset, le),\n\t\tcpuSubtype: dv.getUint32(offset + 4, le)\n\t});\n\n\tconst magic = dv.getUint32(0, le);\n\tswitch (magic) {\n\t\tcase FAT_MAGIC: {\n\t\t\tconst r = [];\n\t\t\tconst count = dv.getUint32(4, le);\n\t\t\tlet offset = 8;\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tr.push(type(offset));\n\t\t\t\toffset += 20;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\t\tcase MH_MAGIC:\n\t\tcase MH_MAGIC_64: {\n\t\t\treturn type(4);\n\t\t}\n\t\tcase MH_CIGAM:\n\t\tcase MH_CIGAM_64: {\n\t\t\tle = true;\n\t\t\treturn type(4);\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unknown header magic: 0x${hex4(magic)}`);\n\t\t}\n\t}\n}\n\n/**\n * Get types of Mach-O file, array if FAT binary, else a single object.\n *\n * @param path Mach-O file.\n * @returns Mach-O types.\n */\nexport async function machoTypesFile(path: string) {\n\tlet data;\n\tconst f = await open(path, 'r');\n\ttry {\n\t\tconst m = 8;\n\t\tconst h = new Uint8Array(m);\n\t\tconst {bytesRead} = await f.read(h, 0, m, 0);\n\t\tif (bytesRead < m) {\n\t\t\tdata = h.subarray(0, bytesRead);\n\t\t} else {\n\t\t\tconst v = new DataView(h.buffer, h.byteOffset, h.byteLength);\n\t\t\tconst n =\n\t\t\t\tv.getUint32(0, false) === FAT_MAGIC\n\t\t\t\t\t? v.getUint32(4, false) * 20\n\t\t\t\t\t: 4;\n\t\t\tconst d = new Uint8Array(m + n);\n\t\t\td.set(h);\n\t\t\tconst {bytesRead} = await f.read(d, m, n, m);\n\t\t\tdata = d.subarray(0, m + bytesRead);\n\t\t}\n\t} finally {\n\t\tawait f.close();\n\t}\n\treturn machoTypesData(data);\n}\n\n/**\n * Create FAT Mach-O data from thin Mach-O binaries.\n *\n * @param machos Mach-O binary datas.\n * @returns FAT binary.\n */\nexport function machoFat(machos: readonly Readonly<Uint8Array>[]) {\n\t// The lipo utility always uses 12/4096 for ppc, ppc64, i386, and x86_64.\n\tconst align = 12;\n\t// eslint-disable-next-line no-bitwise\n\tconst alignSize = (1 << align) >>> 0;\n\n\t// Create the FAT header.\n\tconst headD = new Uint8Array(8);\n\tconst headV = new DataView(\n\t\theadD.buffer,\n\t\theadD.byteOffset,\n\t\theadD.byteLength\n\t);\n\theadV.setUint32(0, FAT_MAGIC, false);\n\n\t// The pieces and their total length.\n\tconst pieces: Uint8Array[] = [headD];\n\tlet total = headD.length;\n\n\t/**\n\t * Helper to add pieces and update total length.\n\t *\n\t * @param data Data.\n\t */\n\tconst add = (data: Uint8Array) => {\n\t\tpieces.push(data);\n\t\ttotal += data.length;\n\t};\n\n\t/**\n\t * Helper to pad pieces.\n\t */\n\tconst pad = () => {\n\t\tconst over = total % alignSize;\n\t\tif (over) {\n\t\t\tadd(new Uint8Array(alignSize - over));\n\t\t}\n\t};\n\n\t// List all the binaries.\n\tconst thins = [];\n\tfor (const body of machos) {\n\t\tconst type = machoTypesData(body);\n\t\tif (Array.isArray(type)) {\n\t\t\t// eslint-disable-next-line unicorn/prefer-type-error\n\t\t\tthrow new Error('Cannot nest FAT binary');\n\t\t}\n\t\tconst headD = new Uint8Array(20);\n\t\tconst headV = new DataView(\n\t\t\theadD.buffer,\n\t\t\theadD.byteOffset,\n\t\t\theadD.byteLength\n\t\t);\n\t\theadV.setUint32(0, type.cpuType, false);\n\t\theadV.setUint32(4, type.cpuSubtype, false);\n\t\theadV.setUint32(16, align, false);\n\t\tthins.push({\n\t\t\theadV,\n\t\t\tbody\n\t\t});\n\t\tadd(headD);\n\t}\n\n\t// Set count in header.\n\theadV.setUint32(4, thins.length, false);\n\n\t// Add binaries aligned, updating their headers.\n\tfor (const {headV, body} of thins) {\n\t\tpad();\n\t\theadV.setUint32(8, total, false);\n\t\theadV.setUint32(12, body.length, false);\n\t\tadd(body);\n\t}\n\n\t// Merge all the pieces.\n\tconst r = new Uint8Array(total);\n\tlet i = 0;\n\tfor (const piece of pieces) {\n\t\tr.set(piece, i);\n\t\ti += piece.length;\n\t}\n\treturn r;\n}\n\n/**\n * Read THIN binaries in a Mach-O binary which might be FAT.\n * Returns slices of the original buffer if a FAT binary.\n * Else it just returns the single THIN binary.\n *\n * @param data Mach-O binary data.\n * @returns Mach-O binary data or datas.\n */\nexport function machoThins<T extends Readonly<Uint8Array>>(data: T) {\n\tconst v = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\tif (v.getUint32(0, false) !== FAT_MAGIC) {\n\t\treturn data;\n\t}\n\tconst r = [];\n\tconst count = v.getUint32(4, false);\n\tlet offset = 8;\n\tfor (let i = 0; i < count; i++) {\n\t\tconst start = v.getUint32(offset + 8, false);\n\t\tconst end = start + v.getUint32(offset + 12, false);\n\t\tr.push(data.subarray(start, end) as T);\n\t\toffset += 20;\n\t}\n\treturn r;\n}\n\n/**\n * Mac projector patch.\n */\nexport interface IMacProjectorMachoPatch {\n\t/**\n\t * Remove signature if present and true.\n\t *\n\t * @default false\n\t */\n\tremoveCodeSignature?: boolean;\n\n\t/**\n\t * Attempt to replace the window title if not null.\n\t *\n\t * @default null\n\t */\n\tpatchWindowTitle?: string | null;\n}\n\n/**\n * Patcher for each binary.\n *\n * @param data Mach-O data.\n * @param title Window title.\n * @returns Patched binary.\n */\nfunction macProjectorMachoPatchEach(data: Uint8Array, title: string) {\n\tconst dataV = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\tlet le = false;\n\tlet lp = false;\n\tconst magic = dataV.getUint32(0, le);\n\tswitch (magic) {\n\t\tcase MH_MAGIC: {\n\t\t\tle = false;\n\t\t\tlp = false;\n\t\t\tbreak;\n\t\t}\n\t\tcase MH_MAGIC_64: {\n\t\t\tle = false;\n\t\t\tlp = true;\n\t\t\tbreak;\n\t\t}\n\t\tcase MH_CIGAM: {\n\t\t\tle = true;\n\t\t\tlp = false;\n\t\t\tbreak;\n\t\t}\n\t\tcase MH_CIGAM_64: {\n\t\t\tle = true;\n\t\t\tlp = true;\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unknown header magic: 0x${hex4(magic)}`);\n\t\t}\n\t}\n\tconst SEGMENT = lp ? LC_SEGMENT_64 : LC_SEGMENT;\n\n\t// Read header and commands.\n\tconst headerSize = lp ? 32 : 28;\n\tconst header = data.subarray(0, headerSize);\n\tconst headerV = new DataView(\n\t\theader.buffer,\n\t\theader.byteOffset,\n\t\theader.byteLength\n\t);\n\tconst numLoadCommands = headerV.getUint32(16, le);\n\tconst sizeOfLoadCommands = headerV.getUint32(20, le);\n\tconst commands = [];\n\tlet lcd = data.subarray(headerSize, headerSize + sizeOfLoadCommands);\n\tfor (let c = 0; c < numLoadCommands; c++) {\n\t\tconst commandSize = new DataView(\n\t\t\tlcd.buffer,\n\t\t\tlcd.byteOffset,\n\t\t\tlcd.byteLength\n\t\t).getUint32(4, le);\n\t\tcommands.push(lcd.subarray(0, commandSize));\n\t\tlcd = lcd.subarray(commandSize);\n\t}\n\n\t// Find the closing segment.\n\tlet linkeditI = -1;\n\tconst {length} = commands;\n\tfor (let i = 0; i < length; i++) {\n\t\tconst command = commands[i];\n\t\tconst commandV = new DataView(\n\t\t\tcommand.buffer,\n\t\t\tcommand.byteOffset,\n\t\t\tcommand.byteLength\n\t\t);\n\t\tif (\n\t\t\tcommandV.getUint32(0, le) === SEGMENT &&\n\t\t\tgetCstrN(command, 8, 16) === SEG_LINKEDIT\n\t\t) {\n\t\t\tif (linkeditI > 0) {\n\t\t\t\tthrow new Error(`Multiple ${SEG_LINKEDIT}`);\n\t\t\t}\n\t\t\tlinkeditI = i;\n\t\t}\n\t}\n\tif (linkeditI < 0) {\n\t\tthrow new Error(`Missing ${SEG_LINKEDIT}`);\n\t}\n\tconst linkedit = commands[linkeditI];\n\tconst linkeditV = new DataView(\n\t\tlinkedit.buffer,\n\t\tlinkedit.byteOffset,\n\t\tlinkedit.byteLength\n\t);\n\n\t// Remember closing segment position to put one there before it.\n\tconst vmaddr = lp\n\t\t? linkeditV.getBigUint64(24, le)\n\t\t: linkeditV.getInt32(24, le);\n\tconst fileoff = lp\n\t\t? linkeditV.getBigUint64(40, le)\n\t\t: linkeditV.getInt32(32, le);\n\tconst filesize = lp\n\t\t? linkeditV.getBigUint64(48, le)\n\t\t: linkeditV.getInt32(36, le);\n\n\t// Create the new section and segment.\n\tconst aligned = 16;\n\tconst segname = '__SHOCKPKG_DATA';\n\tconst secname = segname.toLowerCase();\n\tconst te = new TextEncoder();\n\tconst secdata = new ArrayBuffer(align(6 + title.length * 2, aligned));\n\tconst secview = new DataView(secdata);\n\tsecview.setUint32(0, title.length, le);\n\tfor (let i = 0; i < title.length; i++) {\n\t\t// eslint-disable-next-line unicorn/prefer-code-point\n\t\tsecview.setUint16(4 + i * 2, title.charCodeAt(i), le);\n\t}\n\tconst seg = new Uint8Array(lp ? 152 : 124);\n\tconst segV = new DataView(seg.buffer, seg.byteOffset, seg.byteLength);\n\tconst sec = seg.subarray(lp ? 72 : 56);\n\tconst secV = new DataView(sec.buffer, sec.byteOffset, sec.byteLength);\n\tsec.subarray(0, 16).set(te.encode(secname));\n\tsec.subarray(16, 32).set(te.encode(segname));\n\tif (lp) {\n\t\tsecV.setBigUint64(32, BigInt(vmaddr), le);\n\t\tsecV.setBigUint64(40, BigInt(secdata.byteLength), le);\n\t\tsecV.setUint32(48, Number(fileoff), le);\n\t\tsecV.setUint32(52, secdata.byteLength < aligned ? 0 : 4, le);\n\t} else {\n\t\tsecV.setUint32(32, Number(vmaddr), le);\n\t\tsecV.setUint32(36, secdata.byteLength, le);\n\t\tsecV.setUint32(40, Number(fileoff), le);\n\t\tsecV.setUint32(44, secdata.byteLength < aligned ? 0 : 4, le);\n\t}\n\tsegV.setUint32(0, SEGMENT, le);\n\tsegV.setUint32(4, seg.length, le);\n\tseg.subarray(8, 24).set(te.encode(segname));\n\tconst segSize = alignVmsize(secdata.byteLength);\n\tif (lp) {\n\t\tsegV.setBigUint64(24, BigInt(vmaddr), le);\n\t\tsegV.setBigUint64(32, BigInt(segSize), le);\n\t\tsegV.setBigUint64(40, BigInt(fileoff), le);\n\t\tsegV.setBigUint64(48, BigInt(segSize), le);\n\t\tsegV.setUint32(56, VM_PROT_READ, le);\n\t\tsegV.setUint32(60, VM_PROT_READ, le);\n\t\tsegV.setUint32(64, 1, le);\n\t} else {\n\t\tsegV.setUint32(24, Number(vmaddr), le);\n\t\tsegV.setUint32(28, segSize, le);\n\t\tsegV.setUint32(32, Number(fileoff), le);\n\t\tsegV.setUint32(36, segSize, le);\n\t\tsegV.setUint32(40, VM_PROT_READ, le);\n\t\tsegV.setUint32(44, VM_PROT_READ, le);\n\t\tsegV.setUint32(48, 1, le);\n\t}\n\n\t// Shift closing segment down.\n\tif (lp) {\n\t\tlinkeditV.setBigUint64(24, BigInt(vmaddr) + BigInt(segSize), le);\n\t\tlinkeditV.setBigUint64(40, BigInt(fileoff) + BigInt(segSize), le);\n\t} else {\n\t\tlinkeditV.setUint32(24, Number(vmaddr) + Number(segSize), le);\n\t\tlinkeditV.setUint32(32, Number(fileoff) + Number(segSize), le);\n\t}\n\n\t// Shift any offsets that could reference closing segment.\n\tconst slide = slider(segSize, Number(fileoff), Number(filesize));\n\tfor (const command of commands) {\n\t\tconst commandV = new DataView(\n\t\t\tcommand.buffer,\n\t\t\tcommand.byteOffset,\n\t\t\tcommand.byteLength\n\t\t);\n\t\tswitch (commandV.getUint32(0, le)) {\n\t\t\tcase LC_DYLD_INFO:\n\t\t\tcase LC_DYLD_INFO_ONLY: {\n\t\t\t\tslide.u32(commandV, 8, le);\n\t\t\t\tslide.u32(commandV, 16, le);\n\t\t\t\tslide.u32(commandV, 24, le);\n\t\t\t\tslide.u32(commandV, 32, le);\n\t\t\t\tslide.u32(commandV, 40, le);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_SYMTAB: {\n\t\t\t\tslide.u32(commandV, 8, le);\n\t\t\t\tslide.u32(commandV, 16, le);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_DYSYMTAB: {\n\t\t\t\tslide.u32(commandV, 32, le);\n\t\t\t\tslide.u32(commandV, 40, le);\n\t\t\t\tslide.u32(commandV, 48, le);\n\t\t\t\tslide.u32(commandV, 56, le);\n\t\t\t\tslide.u32(commandV, 64, le);\n\t\t\t\tslide.u32(commandV, 72, le);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LC_CODE_SIGNATURE:\n\t\t\tcase LC_SEGMENT_SPLIT_INFO:\n\t\t\tcase LC_FUNCTION_STARTS:\n\t\t\tcase LC_DATA_IN_CODE:\n\t\t\tcase LC_DYLIB_CODE_SIGN_DRS:\n\t\t\tcase LC_LINKER_OPTIMIZATION_HINT:\n\t\t\tcase LC_DYLD_EXPORTS_TRIE:\n\t\t\tcase LC_DYLD_CHAINED_FIXUPS: {\n\t\t\t\tslide.u32(commandV, 8, le);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// Do nothing.\n\t\t\t}\n\t\t}\n\t}\n\n\t// Update header and insert the segment.\n\theaderV.setUint32(16, numLoadCommands + 1, le);\n\theaderV.setUint32(20, sizeOfLoadCommands + seg.length, le);\n\tcommands.splice(linkeditI, 0, seg);\n\n\t// Construct the new binary, inserting new section data.\n\tconst macho = concat([\n\t\theader,\n\t\t...commands,\n\t\tdata.subarray(\n\t\t\tcommands.reduce((v, c) => v + c.length, header.length),\n\t\t\tNumber(fileoff)\n\t\t),\n\t\tnew Uint8Array(secdata),\n\t\tnew Uint8Array(segSize - secdata.byteLength),\n\t\tdata.subarray(Number(fileoff))\n\t]);\n\n\t// Find the text section.\n\tlet textSegment: Uint8Array | null = null;\n\tfor (const command of commands) {\n\t\tconst commandV = new DataView(\n\t\t\tcommand.buffer,\n\t\t\tcommand.byteOffset,\n\t\t\tcommand.byteLength\n\t\t);\n\t\tif (\n\t\t\tcommandV.getUint32(0, le) === SEGMENT &&\n\t\t\tgetCstrN(command, 8, 16) === SEG_TEXT\n\t\t) {\n\t\t\tif (textSegment) {\n\t\t\t\tthrow new Error(`Multiple ${SEG_TEXT}`);\n\t\t\t}\n\t\t\ttextSegment = command;\n\t\t}\n\t}\n\tif (!textSegment) {\n\t\tthrow new Error(`Missing ${SEG_TEXT}`);\n\t}\n\tconst textSegmentV = new DataView(\n\t\ttextSegment.buffer,\n\t\ttextSegment.byteOffset,\n\t\ttextSegment.byteLength\n\t);\n\tconst textSectionCount = textSegmentV.getUint32(lp ? 64 : 48, le);\n\tlet textSection: Uint8Array | null = null;\n\tfor (let i = 0; i < textSectionCount; i++) {\n\t\tconst o = lp ? 72 + 80 * i : 56 + 68 * i;\n\t\tif (getCstrN(textSegment, o, 16) === SECT_TEXT) {\n\t\t\tif (textSection) {\n\t\t\t\tthrow new Error(`Multiple ${SECT_TEXT}`);\n\t\t\t}\n\t\t\ttextSection = textSegment.subarray(o, o + (lp ? 80 : 68));\n\t\t}\n\t}\n\tif (!textSection) {\n\t\tthrow new Error(`Missing ${SECT_TEXT}`);\n\t}\n\tconst textSectionV = new DataView(\n\t\ttextSection.buffer,\n\t\ttextSection.byteOffset,\n\t\ttextSection.byteLength\n\t);\n\tconst textSectionAddress = lp\n\t\t? textSectionV.getBigUint64(32, le)\n\t\t: textSectionV.getUint32(32, le);\n\tconst textSectionSize = lp\n\t\t? textSectionV.getBigUint64(40, le)\n\t\t: textSectionV.getUint32(36, le);\n\tconst textSectionOffset = lp\n\t\t? textSectionV.getUint32(48, le)\n\t\t: textSectionV.getUint32(40, le);\n\tconst textSectionData = macho.subarray(\n\t\ttextSectionOffset,\n\t\ttextSectionOffset + Number(textSectionSize)\n\t);\n\n\t// Patch the text section to reference the title.\n\tconst cpuType = headerV.getUint32(4, le);\n\tlet found: MacProjectTitlePatch | null = null;\n\tconst patchers = macProjectorTitlePatchesByCpuType(cpuType);\n\tfor (const Patcher of patchers) {\n\t\tconst patcher = new Patcher(\n\t\t\ttextSectionData,\n\t\t\tNumber(textSectionAddress),\n\t\t\tNumber(vmaddr)\n\t\t);\n\t\tif (patcher.check()) {\n\t\t\tif (found) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Duplicate patcher for CPU type: 0x${hex4(cpuType)}`\n\t\t\t\t);\n\t\t\t}\n\t\t\tfound = patcher;\n\t\t}\n\t}\n\tif (!found) {\n\t\tthrow new Error(`No patcher for CPU type: 0x${hex4(cpuType)}`);\n\t}\n\tfound.patch();\n\treturn macho;\n}\n\n/**\n * Apply patches to projector Mach-O binary.\n *\n * @param macho Mach-O data.\n * @param options Patch options.\n * @returns Patched Mach-O.\n */\nexport function macProjectorMachoPatch(\n\tmacho: Readonly<Uint8Array>,\n\toptions: Readonly<IMacProjectorMachoPatch>\n) {\n\tconst {removeCodeSignature, patchWindowTitle} = options;\n\n\t// Remove signature, make copy.\n\tlet data;\n\tconst unsigned = removeCodeSignature ? unsign(macho) : null;\n\tif (unsigned) {\n\t\tdata = new Uint8Array(unsigned);\n\t} else {\n\t\tdata = new Uint8Array(macho.length);\n\t\tdata.set(macho);\n\t}\n\n\tif (typeof patchWindowTitle !== 'string') {\n\t\treturn data;\n\t}\n\n\tconst thins = machoThins(data);\n\tif (!Array.isArray(thins)) {\n\t\treturn macProjectorMachoPatchEach(thins, patchWindowTitle);\n\t}\n\treturn machoFat(\n\t\tthins.map(thin => macProjectorMachoPatchEach(thin, patchWindowTitle))\n\t);\n}\n\n/**\n * Get Mach-O app launcher for a single type.\n *\n * @param type Mach-O type.\n * @returns Launcher data.\n */\nexport async function machoAppLauncherThin(type: Readonly<IMachoType>) {\n\tconst {cpuType} = type;\n\tswitch (cpuType) {\n\t\tcase CPU_TYPE_POWERPC: {\n\t\t\treturn launcher('mac-app-ppc');\n\t\t}\n\t\tcase CPU_TYPE_POWERPC64: {\n\t\t\treturn launcher('mac-app-ppc64');\n\t\t}\n\t\tcase CPU_TYPE_I386: {\n\t\t\treturn launcher('mac-app-i386');\n\t\t}\n\t\tcase CPU_TYPE_X86_64: {\n\t\t\treturn launcher('mac-app-x86_64');\n\t\t}\n\t\tcase CPU_TYPE_ARM64: {\n\t\t\treturn launcher('mac-app-arm64');\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unknown CPU type: 0x${hex4(cpuType)}`);\n\t\t}\n\t}\n}\n\n/**\n * Get Mach-O app launcher for a type list.\n *\n * @param types Mach-O types.\n * @returns Launcher data.\n */\nexport async function machoAppLauncherFat(\n\ttypes: readonly Readonly<IMachoType>[]\n) {\n\treturn machoFat(await Promise.all(types.map(machoAppLauncherThin)));\n}\n\n/**\n * Get Mach-O app launcher for a single or multiple types.\n *\n * @param types Mach-O types.\n * @returns Launcher data.\n */\nexport async function machoAppLauncher(\n\ttypes: Readonly<IMachoType> | readonly Readonly<IMachoType>[]\n) {\n\treturn Array.isArray(types)\n\t\t? machoAppLauncherFat(types as IMachoType[])\n\t\t: machoAppLauncherThin(types as IMachoType);\n}\n"],"mappings":"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","ignoreList":[]}