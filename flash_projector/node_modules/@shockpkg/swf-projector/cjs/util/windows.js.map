{"version":3,"file":"windows.js","names":["_portableExecutableSignature","require","_resedit","_util","_data","_patch","_constants","_exe","_ood","_ood2","_rsrc","_title","windowsProjectorPatch","data","options","iconData","versionStrings","removeCodeSignature","patchWindowTitle","patchOutOfDateDisable","signature","signatureGet","d","signatureSet","exe","NtExecutable","from","code","exeCodeSection","patchOnce","Uint8Array","newHeader","is32bit","ood32","ood64","relocRestore","exeRemoveReloc","exeAssertLastSection","IDD_RESOURCE","rsrc","NtExecutableResource","setSectionByEntry","rsrcPatchIcon","rsrcPatchVersion","sdTitle","patchWindowTitleRsrc","l","length","ArrayBuffer","align","v","DataView","i","setUint16","charCodeAt","entry","IDD_RESERVED","info","name","virtualSize","byteLength","virtualAddress","sizeOfRawData","pointerToRawData","pointerToRelocations","pointerToLineNumbers","numberOfRelocations","numberOfLineNumbers","characteristics","IMAGE_SCN_CNT_INITIALIZED_DATA","IMAGE_SCN_MEM_READ","s","getSectionByEntry","optionalHeaderDataDirectory","set","size","Error","patchWindowTitleData","outputResource","exeUpdateSizes","generate","windowsLauncher","type","resources","launcher","ignoreCert","resIconGroups","Map","iconGroup","Resource","IconGroupEntry","fromEntries","entries","known","get","lang","id","iconGroups","Set","iconDatas","group","add","icon","icons","iconID","typeVersionInfo","typeIcon","typeIconGroup","filter","has","signedData","exeData"],"sources":["../../src/util/windows.ts"],"sourcesContent":["import {signatureGet, signatureSet} from 'portable-executable-signature';\nimport {NtExecutable, NtExecutableResource, Resource} from '@shockpkg/resedit';\n\nimport {launcher} from '../util.ts';\n\nimport {align} from './internal/data.ts';\nimport {patchOnce} from './internal/patch.ts';\nimport {\n\tIDD_RESERVED,\n\tIDD_RESOURCE,\n\tIMAGE_SCN_CNT_INITIALIZED_DATA,\n\tIMAGE_SCN_MEM_READ\n} from './internal/windows/constants.ts';\nimport {\n\texeAssertLastSection,\n\texeCodeSection,\n\texeRemoveReloc,\n\texeUpdateSizes\n} from './internal/windows/exe.ts';\nimport {ood32} from './internal/windows/ood32.ts';\nimport {ood64} from './internal/windows/ood64.ts';\nimport {rsrcPatchIcon, rsrcPatchVersion} from './internal/windows/rsrc.ts';\nimport {\n\tpatchWindowTitleData,\n\tpatchWindowTitleRsrc\n} from './internal/windows/title.ts';\n\n/**\n * Windows projector patch.\n */\nexport interface IWindowsProjectorPatch {\n\t/**\n\t * Replace icons if not null.\n\t *\n\t * @default null\n\t */\n\ticonData?: Readonly<Uint8Array> | null;\n\n\t/**\n\t * Replace version strings if not null.\n\t *\n\t * @default null\n\t */\n\tversionStrings?: Readonly<{[key: string]: string}> | null;\n\n\t/**\n\t * Remove signature if present and true.\n\t *\n\t * @default false\n\t */\n\tremoveCodeSignature?: boolean;\n\n\t/**\n\t * Attempt to replace Windows window title if not null.\n\t *\n\t * @default null\n\t */\n\tpatchWindowTitle?: string | null;\n\n\t/**\n\t * Attempt to disable the out-of-date check if true.\n\t *\n\t * @default false\n\t */\n\tpatchOutOfDateDisable?: boolean;\n}\n\n/**\n * Apply patches to projector.\n *\n * @param data Projector data.\n * @param options Patch options.\n * @returns Patched projector.\n */\nexport function windowsProjectorPatch(\n\tdata: Readonly<Uint8Array>,\n\toptions: Readonly<IWindowsProjectorPatch>\n) {\n\tconst {\n\t\ticonData,\n\t\tversionStrings,\n\t\tremoveCodeSignature,\n\t\tpatchWindowTitle,\n\t\tpatchOutOfDateDisable\n\t} = options;\n\n\t// Remove signature, possibly preserved for later.\n\tconst signature = removeCodeSignature ? null : signatureGet(data);\n\tlet d = signatureSet(data, null, true, true);\n\n\t// Parse the EXE once, if needed.\n\tlet exe: NtExecutable | null = null;\n\n\t// Patch the out-of-date check.\n\tif (patchOutOfDateDisable) {\n\t\texe = exe || NtExecutable.from(d);\n\n\t\t// Narrow the search to just the code section and patch.\n\t\tconst code = exeCodeSection(exe);\n\t\tconst {data} = code;\n\t\tpatchOnce(\n\t\t\tnew Uint8Array(data),\n\t\t\texe.newHeader.is32bit() ? ood32 : ood64,\n\t\t\t'Out Of Date Disable'\n\t\t);\n\t\tcode.data = data;\n\t}\n\n\t// Do patches that require changing size.\n\tif (iconData || versionStrings || patchWindowTitle) {\n\t\texe = exe || NtExecutable.from(d);\n\n\t\t// Remove reloc so rsrc can safely be resized.\n\t\tconst relocRestore = exeRemoveReloc(exe);\n\n\t\t// Remove rsrc to modify and so sections can be added.\n\t\texeAssertLastSection(exe, IDD_RESOURCE, '.rsrc');\n\t\tconst rsrc = NtExecutableResource.from(exe);\n\t\texe.setSectionByEntry(IDD_RESOURCE, null);\n\n\t\tif (iconData) {\n\t\t\trsrcPatchIcon(rsrc, iconData);\n\t\t}\n\n\t\tif (versionStrings) {\n\t\t\trsrcPatchVersion(rsrc, versionStrings);\n\t\t}\n\n\t\t// If patching title and cannot be done by resource changes.\n\t\tlet sdTitle: ArrayBuffer | null = null;\n\t\tif (\n\t\t\ttypeof patchWindowTitle === 'string' &&\n\t\t\t!patchWindowTitleRsrc(rsrc, patchWindowTitle)\n\t\t) {\n\t\t\tconst l = patchWindowTitle.length;\n\t\t\tsdTitle = new ArrayBuffer(align((l + 1) * 2, 16));\n\t\t\tconst v = new DataView(sdTitle);\n\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\t// eslint-disable-next-line unicorn/prefer-code-point\n\t\t\t\tv.setUint16(i * 2, patchWindowTitle.charCodeAt(i), true);\n\t\t\t}\n\t\t}\n\n\t\t// Assemble new data section if any.\n\t\tif (sdTitle) {\n\t\t\t// PE library lacks a way to add an arbitrary section.\n\t\t\t// Using the reserved index temporarily, then clearing it.\n\t\t\tconst entry = IDD_RESERVED as number;\n\t\t\texe.setSectionByEntry(entry, {\n\t\t\t\tinfo: {\n\t\t\t\t\tname: '.shockd',\n\t\t\t\t\tvirtualSize: sdTitle.byteLength,\n\t\t\t\t\tvirtualAddress: 0,\n\t\t\t\t\tsizeOfRawData: sdTitle.byteLength,\n\t\t\t\t\tpointerToRawData: 0,\n\t\t\t\t\tpointerToRelocations: 0,\n\t\t\t\t\tpointerToLineNumbers: 0,\n\t\t\t\t\tnumberOfRelocations: 0,\n\t\t\t\t\tnumberOfLineNumbers: 0,\n\t\t\t\t\tcharacteristics:\n\t\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\t\tIMAGE_SCN_CNT_INITIALIZED_DATA | IMAGE_SCN_MEM_READ\n\t\t\t\t},\n\t\t\t\tdata: sdTitle\n\t\t\t});\n\t\t\tconst s = exe.getSectionByEntry(entry);\n\t\t\texe.newHeader.optionalHeaderDataDirectory.set(entry, {\n\t\t\t\tvirtualAddress: 0,\n\t\t\t\tsize: 0\n\t\t\t});\n\t\t\tif (!s) {\n\t\t\t\tthrow new Error('Internal error');\n\t\t\t}\n\n\t\t\t// Patch title if in the data.\n\t\t\tif (sdTitle) {\n\t\t\t\tpatchWindowTitleData(exe, s.info.virtualAddress);\n\t\t\t}\n\t\t}\n\n\t\t// Add rsrc back.\n\t\trsrc.outputResource(exe, false, true);\n\n\t\t// Add reloc back.\n\t\trelocRestore();\n\n\t\t// Update sizes.\n\t\texeUpdateSizes(exe);\n\t}\n\n\t// If the EXE was parsed generate new data from it.\n\tif (exe) {\n\t\td = exe.generate();\n\t}\n\n\t// Add back signature if one preserved.\n\tif (signature) {\n\t\td = signatureSet(d, signature, true, true);\n\t}\n\n\treturn new Uint8Array(d);\n}\n\n/**\n * Get Windows launcher for the specified type.\n *\n * @param type Executable type.\n * @param resources Data to optionally copy resources from.\n * @returns Launcher data.\n */\nexport async function windowsLauncher(\n\ttype: 'i686' | 'x86_64',\n\tresources: (() => Promise<Uint8Array>) | null = null\n) {\n\tlet data;\n\tswitch (type) {\n\t\tcase 'i686': {\n\t\t\tdata = await launcher('windows-i686');\n\t\t\tbreak;\n\t\t}\n\t\tcase 'x86_64': {\n\t\t\tdata = await launcher('windows-x86_64');\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Invalid type: ${type as string}`);\n\t\t}\n\t}\n\n\t// Check if copying resources.\n\tif (!resources) {\n\t\treturn data;\n\t}\n\n\t// Read resources from file.\n\tconst rsrc = NtExecutableResource.from(\n\t\tNtExecutable.from(await resources(), {\n\t\t\tignoreCert: true\n\t\t})\n\t);\n\n\t// Find the first icon group for each language.\n\tconst resIconGroups = new Map<string | number, Resource.IconGroupEntry>();\n\tfor (const iconGroup of Resource.IconGroupEntry.fromEntries(rsrc.entries)) {\n\t\tconst known = resIconGroups.get(iconGroup.lang) || null;\n\t\tif (!known || iconGroup.id < known.id) {\n\t\t\tresIconGroups.set(iconGroup.lang, iconGroup);\n\t\t}\n\t}\n\n\t// List the groups and icons to be kept.\n\tconst iconGroups = new Set();\n\tconst iconDatas = new Set();\n\tfor (const [, group] of resIconGroups) {\n\t\ticonGroups.add(group.id);\n\t\tfor (const icon of group.icons) {\n\t\t\ticonDatas.add(icon.iconID);\n\t\t}\n\t}\n\n\t// Filter out the resources to keep.\n\tconst typeVersionInfo = 16;\n\tconst typeIcon = 3;\n\tconst typeIconGroup = 14;\n\trsrc.entries = rsrc.entries.filter(\n\t\tentry =>\n\t\t\tentry.type === typeVersionInfo ||\n\t\t\t(entry.type === typeIcon && iconDatas.has(entry.id)) ||\n\t\t\t(entry.type === typeIconGroup && iconGroups.has(entry.id))\n\t);\n\n\t// Remove signature if present.\n\tconst signedData = signatureGet(data);\n\tlet exeData = signatureSet(data, null, true, true);\n\n\t// Parse launcher.\n\tconst exe = NtExecutable.from(exeData);\n\n\t// Remove reloc so rsrc can safely be resized.\n\tconst relocRestore = exeRemoveReloc(exe);\n\n\t// Apply resources to launcher.\n\trsrc.outputResource(exe, false, true);\n\n\t// Add reloc back.\n\trelocRestore();\n\n\t// Update sizes.\n\texeUpdateSizes(exe);\n\n\t// Generated the updated launcher.\n\texeData = exe.generate();\n\n\t// Add back signature if one present.\n\tif (signedData) {\n\t\texeData = signatureSet(exeData, signedData, true, true);\n\t}\n\n\treturn new Uint8Array(exeData);\n}\n"],"mappings":"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","ignoreList":[]}