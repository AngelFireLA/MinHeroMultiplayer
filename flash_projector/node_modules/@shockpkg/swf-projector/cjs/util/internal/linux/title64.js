"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.title64 = exports.PatchTitle64 = void 0;
var _asm = require("./asm.js");
var _title = require("./title.js");
/* eslint-disable max-classes-per-file */

/**
 * PatchTitle64 object.
 */
class PatchTitle64 extends _title.PatchTitle {}

/**
 * Patch objects.
 */
exports.PatchTitle64 = PatchTitle64;
const title64 = exports.title64 = [
/**
 * 24.0.0.186 x86_64.
 */
class extends PatchTitle64 {
  _addr_ = 0n;

  /**
   * @inheritDoc
   */
  check() {
    for (const [shdr, i, d] of this._findFuzzyCode(_asm.TITLE_X8664['24'])) {
      const v = new DataView(d.buffer, d.byteOffset, d.byteLength);
      const addr = shdr.shAddr + BigInt(i);
      const rip = addr + 7n;
      const ptr = rip + BigInt(v.getUint32(i + 3, true));
      const len = v.getUint32(i + 8, true);
      const str = this._readCstr(ptr);
      if (!str || str.length !== len || !_title.titleMatchA.test(str)) {
        continue;
      }
      if (this._addr_) {
        return false;
      }
      this._addr_ = addr;
    }
    return !!this._addr_;
  }

  /**
   * @inheritDoc
   */
  patch() {
    const addr = this._addr_;
    const shdr = this._theShdrForAddress(addr);
    const v = new DataView(shdr.data);
    const i = Number(addr - shdr.shAddr);
    const rip = shdr.shAddr + BigInt(i + 7);
    v.setUint32(i + 3, Number(this._titleA - rip), true);
    v.setUint32(i + 8, this._titleL, true);
  }
}];
//# sourceMappingURL=title64.js.map