import { writeFuzzy } from "../patch.mjs";
import { Patch } from "./patch.mjs";

/**
 * Patch menu spec.
 */

/**
 * PatchMenu object.
 */
export class PatchMenu extends Patch {
  /**
   * Patch spec.
   */

  _replace_ = [];

  /**
   * @inheritDoc
   */
  check() {
    this._replace_ = [];
    const rep = [];
    for (const {
      count,
      find,
      replace
    } of this._spec) {
      let found = 0;
      for (const [, i, d] of this._findFuzzyCode(find)) {
        found++;
        rep.push([d, i, replace]);
        if (found > count) {
          return false;
        }
      }
      if (found !== count) {
        return false;
      }
    }
    this._replace_ = rep;
    return !!rep.length;
  }

  /**
   * @inheritDoc
   */
  patch() {
    for (const [d, i, f] of this._replace_) {
      writeFuzzy(d, i, f);
    }
  }
}
//# sourceMappingURL=menu.mjs.map